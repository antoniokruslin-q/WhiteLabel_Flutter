def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def bitriseEnvironmentVariables = [
    APP_LABEL: System.getenv("APP_LABEL"),
    APP_ID: System.getenv("APP_ID"),
];

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {

    // ----- BEGIN flavorDimensions (autogenerated by flutter_flavorizr) -----
    flavorDimensions "app"

    productFlavors {
        dev {
            dimension "app"
            applicationId "com.stepathlon.ng.app.dev"
            resValue "string", "app_name", "Stepathlon Dev"
            //LOCAL - VARIABLES
            // applicationId localEnvironmentVariables.APP_ID
            // resValue "string", "app_name", localEnvironmentVariables.APP_LABEL
        }
        staging {
            dimension "app"
            applicationId "com.stepathlon.ng.app.staging"
            resValue "string", "app_name", "Stepathlon Staging"
        }
        prod {
            dimension "app"
            //BITRISE - VARIABLES
            applicationId bitriseEnvironmentVariables.APP_ID
            resValue "string", "app_name", bitriseEnvironmentVariables.APP_LABEL
            //LOCAL - VARIABLES
            // applicationId "com.stepathlon.ng.app"
            // resValue "string", "app_name", "Stepathlon"
        }
    }

    // ----- END flavorDimensions (autogenerated by flutter_flavorizr) -----
    
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

     signingConfigs {
        //BITRISE - VARIABLES
            release {
                keyAlias System.getenv("BITRISEIO_ANDROID_KEYSTORE_ALIAS")
                keyPassword System.getenv("BITRISEIO_ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD")
                storeFile file(System.getenv("BITRISE_SOURCE_DIR") + "/android/app/keystore/stepathlon_keystore.jks")
                storePassword System.getenv("BITRISEIO_ANDROID_KEYSTORE_PASSWORD")
            }
        //LOCAL - VARIABLES
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
